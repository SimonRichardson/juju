// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/juju/juju/domain/crossmodelrelation/service (interfaces: ModelMigrationState)
//
// Generated by this command:
//
//	mockgen -typed -package service -destination migration_mock_test.go github.com/juju/juju/domain/crossmodelrelation/service ModelMigrationState
//

// Package service is a generated GoMock package.
package service

import (
	context "context"
	reflect "reflect"

	crossmodelrelation "github.com/juju/juju/domain/crossmodelrelation"
	gomock "go.uber.org/mock/gomock"
)

// MockModelMigrationState is a mock of ModelMigrationState interface.
type MockModelMigrationState struct {
	ctrl     *gomock.Controller
	recorder *MockModelMigrationStateMockRecorder
}

// MockModelMigrationStateMockRecorder is the mock recorder for MockModelMigrationState.
type MockModelMigrationStateMockRecorder struct {
	mock *MockModelMigrationState
}

// NewMockModelMigrationState creates a new mock instance.
func NewMockModelMigrationState(ctrl *gomock.Controller) *MockModelMigrationState {
	mock := &MockModelMigrationState{ctrl: ctrl}
	mock.recorder = &MockModelMigrationStateMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockModelMigrationState) EXPECT() *MockModelMigrationStateMockRecorder {
	return m.recorder
}

// ImportOffers mocks base method.
func (m *MockModelMigrationState) ImportOffers(arg0 context.Context, arg1 []crossmodelrelation.OfferImport) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ImportOffers", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ImportOffers indicates an expected call of ImportOffers.
func (mr *MockModelMigrationStateMockRecorder) ImportOffers(arg0, arg1 any) *MockModelMigrationStateImportOffersCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ImportOffers", reflect.TypeOf((*MockModelMigrationState)(nil).ImportOffers), arg0, arg1)
	return &MockModelMigrationStateImportOffersCall{Call: call}
}

// MockModelMigrationStateImportOffersCall wrap *gomock.Call
type MockModelMigrationStateImportOffersCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockModelMigrationStateImportOffersCall) Return(arg0 error) *MockModelMigrationStateImportOffersCall {
	c.Call = c.Call.Return(arg0)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockModelMigrationStateImportOffersCall) Do(f func(context.Context, []crossmodelrelation.OfferImport) error) *MockModelMigrationStateImportOffersCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockModelMigrationStateImportOffersCall) DoAndReturn(f func(context.Context, []crossmodelrelation.OfferImport) error) *MockModelMigrationStateImportOffersCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
